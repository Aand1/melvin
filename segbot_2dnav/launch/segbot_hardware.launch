<launch>
    <arg name="sim"/>
    <arg name="use_base_laser"/>
    <arg name="use_tilt_laser"/>
    <arg name="use_servos"/>
    <arg name="use_gps"/>
    <arg name="use_camera"/>
    <arg name="use_segway_rmp"/>

    <!--
    <include file="$(find segbot_description)/launch/segbot.machine"/>
    -->

    <group unless="$(arg sim)">
        <!-- Segway RMP -->
        <node if="$(arg use_segway_rmp)" name="segway_rmp" pkg="segway_rmp" type="segway_rmp_node">
            <param name="interface_type" type="str" value="serial"/>
            <param name="serial_port" type="str" value="/dev/segway_rmp"/>
            <param name="frame_id" type="str" value="base_footprint"/>
            <remap from="~cmd_vel" to="/cmd_vel"/>
            <param name="linear_odom_scale" type="double" value="0.9"/>
            <param name="angular_odom_scale" type="double" value="0.89"/>
        </node>

        <node if="$(arg use_base_laser)" name="base_laser" pkg="hokuyo_node" type="hokuyo_node">
            <param name="port" value="/dev/sensors/hokuyo_H0901182"/>
            <param name="frame_id" value="/base_laser_link"/>
            <param name="min_ang" value="-1.57"/>
            <param name="max_ang" value="1.57"/>
            <remap from="scan" to="base_scan"/>
        </node>

        <!-- Tilt Laser -->
        <node if="$(arg use_tilt_laser)" name="tilt_laser" pkg="urg_node" type="urg_node">
            <!-- <param name="ip_address" value="172.16.106.33"/> -->
            <param name="ip_address" value="192.168.1.254"/>
            <param name="publish_multiecho" value="false"/>
            <param name="frame_id" value="tilt_laser_link"/>
            <param name="angle_min" value="-1.00"/>
            <param name="angle_max" value="1.00"/>
            <remap from="scan" to="tilt_scan"/>
        </node>

        <!-- Servos -->
        <node if="$(arg use_servos)" name="servo_node" pkg="servo_node" type="servo_node">
            <param name="device_name" value="/dev/servo"/>
            <param name="baud_rate" value="57600"/>
            <rosparam param="servoID">[1,2]</rosparam>
            <rosparam param="minAngle">[-8,-57]</rosparam>
            <rosparam param="maxAngle">[-8,43]</rosparam>
            <rosparam param="velocity">[10,100]</rosparam>
<!--
            <rosparam param="servoID">[1]</rosparam>
            <rosparam param="minAngle">[-8]</rosparam>
            <rosparam param="maxAngle">[-8]</rosparam>
            <rosparam param="velocity">[10]</rosparam>
-->
        </node>

        <node if="$(arg use_camera)" name="segbot_cam" pkg="usb_cam" type="usb_cam_node" respawn="true"/>

        <!--Static Odometry Transform -->
        <node unless="$(arg use_segway_rmp)" name="not_moving_segway" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 1 odom base_footprint 100"/>

        <!-- Controller Manager/Loop -->
        <node name="controller_loop" pkg="segbot_2dnav" type="controller_manager" args="-x robot_description"/>

        <!-- Load controllers -->
        <rosparam file="$(find servo_controller)/config/servo_controller.yaml" command="load"/>
        <node name="controller_spawner" pkg="controller_manager" type="spawner" args="servo_controller_name joint_state_controller"/>

        <!-- State Information -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="publish_frequency" type="double" value="50.0"/>
        </node>

        <node name="pr2_mechanism_diagnostics" pkg="pr2_mechanism_diagnostics" type="pr2_mechanism_diagnostics"/>

        <!-- Bring up the GPS -->
        <include if="$(arg use_gps)" file="$(find gps_for_ekf)/launch/gps_for_ekf_node.launch"/>
    </group>
</launch>
